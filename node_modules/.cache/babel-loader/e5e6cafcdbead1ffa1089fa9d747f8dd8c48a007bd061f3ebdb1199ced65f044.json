{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predictions() {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_URL = 'http://localhost:3001'; // Match backend port\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_URL}/api/databricks-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const data = await response.json();\n      console.log('Databricks Predictions:', data);\n      setPredictions(data);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Databricks Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : predictions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No prediction data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"8\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(predictions[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: predictions.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Predictions, \"JJIlf+CNpx+s4G7XQfkA0VXXAmA=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Predictions","_s","predictions","setPredictions","loading","setLoading","error","setError","API_URL","fetchPredictions","response","fetch","ok","Error","data","json","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","cellPadding","Object","keys","map","key","row","index","values","value","i","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Predictions() {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_URL = 'http://localhost:3001'; // Match backend port\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_URL}/api/databricks-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const data = await response.json();\n      console.log('Databricks Predictions:', data);\n      setPredictions(data);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Databricks Predictions</h1>\n      {error && <div className=\"error-message\">Error: {error}</div>}\n      {loading ? (\n        <p>Loading...</p>\n      ) : predictions.length === 0 ? (\n        <p>No prediction data available</p>\n      ) : (\n        <div className=\"content-section\">\n          <table border=\"1\" cellPadding=\"8\">\n            <thead>\n              <tr>\n                {Object.keys(predictions[0]).map((key) => (\n                  <th key={key}>{key}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {predictions.map((row, index) => (\n                <tr key={index}>\n                  {Object.values(row).map((value, i) => (\n                    <td key={i}>{value}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Predictions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}