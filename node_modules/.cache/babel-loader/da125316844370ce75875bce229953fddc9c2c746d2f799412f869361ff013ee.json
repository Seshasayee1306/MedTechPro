{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/S3Contents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, CircularProgress, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@mui/material';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction S3Contents() {\n  _s();\n  const [s3Contents, setS3Contents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchS3Contents();\n  }, []);\n  const fetchS3Contents = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/s3-contents');\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch S3 contents');\n      }\n      const data = await response.json();\n\n      // Sort by LastModified (most recent first)\n      const sortedData = data.sort((a, b) => new Date(b.LastModified) - new Date(a.LastModified));\n      setS3Contents(sortedData);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = key => {\n    const encodedKey = encodeURIComponent(key);\n    window.open(`http://localhost:3001/api/download-s3?key=${encodedKey}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      textAlign: 'center',\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"S3 Bucket Contents (Newest First)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Error: \", error, /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: fetchS3Contents,\n        sx: {\n          ml: 2\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: s3Contents.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"No files found in S3 bucket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          textAlign: 'left'\n        },\n        children: s3Contents.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.Key,\n            secondary: `Last modified: ${new Date(item.LastModified).toLocaleString()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              color: \"primary\",\n              onClick: () => handleDownload(item.Key),\n              children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"You can download the files by clicking on the download icon next to each file name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(S3Contents, \"S2qfA+BHHP/EuVxwojJSd2Qhgz0=\");\n_c = S3Contents;\nexport default S3Contents;\nvar _c;\n$RefreshReg$(_c, \"S3Contents\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","CircularProgress","Alert","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","DownloadIcon","jsxDEV","_jsxDEV","S3Contents","_s","s3Contents","setS3Contents","loading","setLoading","error","setError","fetchS3Contents","response","fetch","ok","errorData","json","Error","data","sortedData","sort","a","b","Date","LastModified","console","message","handleDownload","key","encodedKey","encodeURIComponent","window","open","maxWidth","sx","textAlign","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","size","color","onClick","ml","display","justifyContent","length","map","item","index","primary","Key","secondary","toLocaleString","edge","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/S3Contents.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, CircularProgress, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@mui/material';\nimport DownloadIcon from '@mui/icons-material/Download';\n\nfunction S3Contents() {\n  const [s3Contents, setS3Contents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchS3Contents();\n  }, []);\n\n  const fetchS3Contents = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/s3-contents');\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch S3 contents');\n      }\n\n      const data = await response.json();\n\n      // Sort by LastModified (most recent first)\n      const sortedData = data.sort((a, b) => new Date(b.LastModified) - new Date(a.LastModified));\n\n      setS3Contents(sortedData);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownload = (key) => {\n    const encodedKey = encodeURIComponent(key);\n    window.open(`http://localhost:3001/api/download-s3?key=${encodedKey}`, '_blank');\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ textAlign: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        S3 Bucket Contents (Newest First)\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          Error: {error}\n          <Button size=\"small\" color=\"primary\" onClick={fetchS3Contents} sx={{ ml: 2 }}>\n            Retry\n          </Button>\n        </Alert>\n      )}\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <Box sx={{ mt: 4 }}>\n          {s3Contents.length === 0 ? (\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              No files found in S3 bucket\n            </Typography>\n          ) : (\n            <List sx={{ textAlign: 'left' }}>\n              {s3Contents.map((item, index) => (\n                <ListItem key={index} sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <ListItemText\n                    primary={item.Key}\n                    secondary={`Last modified: ${new Date(item.LastModified).toLocaleString()}`}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      color=\"primary\"\n                      onClick={() => handleDownload(item.Key)}\n                    >\n                      <DownloadIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Box>\n      )}\n\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          You can download the files by clicking on the download icon next to each file name.\n        </Typography>\n      </Box>\n    </Container>\n  );\n}\n\nexport default S3Contents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}