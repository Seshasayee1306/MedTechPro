{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Button, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predictions() {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [jobStatus, setJobStatus] = useState('');\n  const API_URL = 'http://localhost:3001'; // Ensure this matches your backend\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_URL}/api/latest-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const result = await response.json();\n      console.log('Predictions from backend:', result);\n      setPredictions(Array.isArray(result.data) ? result.data : []);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const triggerDatabricksJob = async () => {\n    try {\n      setJobStatus('Triggering Databricks job...');\n      const response = await fetch(`${API_URL}/api/run-databricks-job`, {\n        method: 'POST'\n      });\n      const result = await response.json();\n      if (result.success) {\n        setJobStatus(`✅ Job started with Run ID: ${result.run_id}`);\n      } else {\n        setJobStatus(`❌ Failed to trigger job`);\n      }\n    } catch (error) {\n      console.error('Trigger Error:', error);\n      setJobStatus(`❌ ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      textAlign: 'center',\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Databricks Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: triggerDatabricksJob,\n      sx: {\n        mb: 2,\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"\\u25B6\\uFE0F Run Prediction Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), jobStatus && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: jobStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : predictions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      sx: {\n        mt: 2\n      },\n      children: \"No prediction data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.keys(predictions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textPrimary\",\n                children: key.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: predictions.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.values(row).map((value, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: value\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Predictions, \"RvNICO9fmM5Ar35mOvwSHqA8qGY=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Button","Box","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Predictions","_s","predictions","setPredictions","loading","setLoading","error","setError","jobStatus","setJobStatus","API_URL","fetchPredictions","response","fetch","ok","Error","result","json","console","log","Array","isArray","data","message","triggerDatabricksJob","method","success","run_id","maxWidth","sx","textAlign","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","mb","padding","fontSize","severity","display","justifyContent","length","component","Object","keys","map","key","align","toUpperCase","row","index","values","value","i","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Button, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\n\nfunction Predictions() {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [jobStatus, setJobStatus] = useState('');\n\n  const API_URL = 'http://localhost:3001'; // Ensure this matches your backend\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_URL}/api/latest-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const result = await response.json();\n      console.log('Predictions from backend:', result);\n      setPredictions(Array.isArray(result.data) ? result.data : []);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const triggerDatabricksJob = async () => {\n    try {\n      setJobStatus('Triggering Databricks job...');\n      const response = await fetch(`${API_URL}/api/run-databricks-job`, {\n        method: 'POST',\n      });\n      const result = await response.json();\n      if (result.success) {\n        setJobStatus(`✅ Job started with Run ID: ${result.run_id}`);\n      } else {\n        setJobStatus(`❌ Failed to trigger job`);\n      }\n    } catch (error) {\n      console.error('Trigger Error:', error);\n      setJobStatus(`❌ ${error.message}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ textAlign: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Databricks Predictions\n      </Typography>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={triggerDatabricksJob}\n        sx={{ mb: 2, padding: '10px 20px', fontSize: '16px' }}\n      >\n        ▶️ Run Prediction Model\n      </Button>\n\n      {jobStatus && (\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          {jobStatus}\n        </Typography>\n      )}\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          Error: {error}\n        </Alert>\n      )}\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n      ) : predictions.length === 0 ? (\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\n          No prediction data available\n        </Typography>\n      ) : (\n        <TableContainer component={Paper} sx={{ mt: 4 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {Object.keys(predictions[0]).map((key) => (\n                  <TableCell key={key} align=\"center\">\n                    <Typography variant=\"h6\" color=\"textPrimary\">\n                      {key.toUpperCase()}\n                    </Typography>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {predictions.map((row, index) => (\n                <TableRow key={index}>\n                  {Object.values(row).map((value, i) => (\n                    <TableCell key={i} align=\"center\">\n                      {value}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Container>\n  );\n}\n\nexport default Predictions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErK,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM2B,OAAO,GAAG,uBAAuB,CAAC,CAAC;;EAEzC1B,SAAS,CAAC,MAAM;IACd2B,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,yBAAyB,CAAC;MACjE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEH,MAAM,CAAC;MAChDb,cAAc,CAACiB,KAAK,CAACC,OAAO,CAACL,MAAM,CAACM,IAAI,CAAC,GAAGN,MAAM,CAACM,IAAI,GAAG,EAAE,CAAC;IAC/D,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;IACzB,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACFf,YAAY,CAAC,8BAA8B,CAAC;MAC5C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,yBAAyB,EAAE;QAChEe,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMT,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACU,OAAO,EAAE;QAClBjB,YAAY,CAAC,8BAA8BO,MAAM,CAACW,MAAM,EAAE,CAAC;MAC7D,CAAC,MAAM;QACLlB,YAAY,CAAC,yBAAyB,CAAC;MACzC;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCG,YAAY,CAAC,KAAKH,KAAK,CAACiB,OAAO,EAAE,CAAC;IACpC;EACF,CAAC;EAED,oBACExB,OAAA,CAACd,SAAS;IAAC2C,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC1DjC,OAAA,CAACb,UAAU;MAAC+C,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbvC,OAAA,CAACZ,MAAM;MACL8C,OAAO,EAAC,WAAW;MACnBM,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEhB,oBAAqB;MAC9BK,EAAE,EAAE;QAAEY,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAX,QAAA,EACvD;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAER9B,SAAS,iBACRT,OAAA,CAACb,UAAU;MAAC+C,OAAO,EAAC,OAAO;MAACJ,EAAE,EAAE;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EACvCxB;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACb,EAEAhC,KAAK,iBACJP,OAAA,CAACT,KAAK;MAACsD,QAAQ,EAAC,OAAO;MAACf,EAAE,EAAE;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,GAAC,SAC9B,EAAC1B,KAAK;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,EAEAlC,OAAO,gBACNL,OAAA,CAACX,GAAG;MAACyC,EAAE,EAAE;QAAEgB,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAd,QAAA,eACrDjC,OAAA,CAACV,gBAAgB;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,GACJpC,WAAW,CAAC6C,MAAM,KAAK,CAAC,gBAC1BhD,OAAA,CAACb,UAAU;MAAC+C,OAAO,EAAC,OAAO;MAACM,KAAK,EAAC,gBAAgB;MAACV,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EAAC;IAElE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAEbvC,OAAA,CAACL,cAAc;MAACsD,SAAS,EAAEnD,KAAM;MAACgC,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eAC9CjC,OAAA,CAACR,KAAK;QAAAyC,QAAA,gBACJjC,OAAA,CAACJ,SAAS;UAAAqC,QAAA,eACRjC,OAAA,CAACH,QAAQ;YAAAoC,QAAA,EACNiB,MAAM,CAACC,IAAI,CAAChD,WAAW,CAAC,CAAC,CAAC,CAAC,CAACiD,GAAG,CAAEC,GAAG,iBACnCrD,OAAA,CAACN,SAAS;cAAW4D,KAAK,EAAC,QAAQ;cAAArB,QAAA,eACjCjC,OAAA,CAACb,UAAU;gBAAC+C,OAAO,EAAC,IAAI;gBAACM,KAAK,EAAC,aAAa;gBAAAP,QAAA,EACzCoB,GAAG,CAACE,WAAW,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR;YAAC,GAHCc,GAAG;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIR,CACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZvC,OAAA,CAACP,SAAS;UAAAwC,QAAA,EACP9B,WAAW,CAACiD,GAAG,CAAC,CAACI,GAAG,EAAEC,KAAK,kBAC1BzD,OAAA,CAACH,QAAQ;YAAAoC,QAAA,EACNiB,MAAM,CAACQ,MAAM,CAACF,GAAG,CAAC,CAACJ,GAAG,CAAC,CAACO,KAAK,EAAEC,CAAC,kBAC/B5D,OAAA,CAACN,SAAS;cAAS4D,KAAK,EAAC,QAAQ;cAAArB,QAAA,EAC9B0B;YAAK,GADQC,CAAC;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACZ;UAAC,GALWkB,KAAK;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB;AAACrC,EAAA,CAhHQD,WAAW;AAAA4D,EAAA,GAAX5D,WAAW;AAkHpB,eAAeA,WAAW;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}