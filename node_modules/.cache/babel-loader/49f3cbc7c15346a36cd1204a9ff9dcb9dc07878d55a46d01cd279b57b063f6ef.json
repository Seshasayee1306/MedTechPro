{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AthenaQuery() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const runQuery = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('http://localhost:3001/api/query-athena', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResults(data.Rows || []);\n      } else {\n        setError(data.error || 'Query failed');\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Athena Query Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Enter your Athena SQL query\",\n      rows: 5,\n      cols: 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runQuery,\n      disabled: loading,\n      children: \"Run Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Running query...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: results[0].Data.map((cell, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: cell.VarCharValue\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.slice(1).map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.Data.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell.VarCharValue\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(AthenaQuery, \"PJmBv5DlmYaxJghDzkqFY8wbhZA=\");\n_c = AthenaQuery;\nexport default AthenaQuery;\nvar _c;\n$RefreshReg$(_c, \"AthenaQuery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AthenaQuery","_s","query","setQuery","results","setResults","error","setError","loading","setLoading","runQuery","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Rows","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","cols","onClick","disabled","length","border","Data","map","cell","i","VarCharValue","slice","row","j","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AthenaQuery() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const runQuery = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('http://localhost:3001/api/query-athena', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query })\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setResults(data.Rows || []);\n      } else {\n        setError(data.error || 'Query failed');\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Athena Query Interface</h1>\n      <textarea\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Enter your Athena SQL query\"\n        rows={5}\n        cols={80}\n      />\n      <br />\n      <button onClick={runQuery} disabled={loading}>\n        Run Query\n      </button>\n      {loading && <p>Running query...</p>}\n      {error && <p className=\"error-message\">Error: {error}</p>}\n      {results.length > 0 && (\n        <table border=\"1\">\n          <thead>\n            <tr>\n              {results[0].Data.map((cell, i) => (\n                <th key={i}>{cell.VarCharValue}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {results.slice(1).map((row, i) => (\n              <tr key={i}>\n                {row.Data.map((cell, j) => (\n                  <td key={j}>{cell.VarCharValue}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AthenaQuery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}