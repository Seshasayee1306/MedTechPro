{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/S3Contents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction S3Contents() {\n  _s();\n  const [s3Contents, setS3Contents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchS3Contents();\n  }, []);\n  const fetchS3Contents = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/s3-contents');\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch S3 contents');\n      }\n      const data = await response.json();\n\n      // Sort by LastModified (most recent first)\n      const sortedData = data.sort((a, b) => new Date(b.LastModified) - new Date(a.LastModified));\n      setS3Contents(sortedData);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = key => {\n    const encodedKey = encodeURIComponent(key);\n    window.open(`http://localhost:3001/api/download-s3?key=${encodedKey}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"S3 Bucket Contents (Newest First)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchS3Contents,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: s3Contents.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No files found in S3 bucket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : s3Contents.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.Key, \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownload(item.Key),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '10px',\n              color: '#888'\n            },\n            children: [\"(\", new Date(item.LastModified).toLocaleString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(S3Contents, \"S2qfA+BHHP/EuVxwojJSd2Qhgz0=\");\n_c = S3Contents;\nexport default S3Contents;\nvar _c;\n$RefreshReg$(_c, \"S3Contents\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","S3Contents","_s","s3Contents","setS3Contents","loading","setLoading","error","setError","fetchS3Contents","response","fetch","ok","errorData","json","Error","data","sortedData","sort","a","b","Date","LastModified","console","message","handleDownload","key","encodedKey","encodeURIComponent","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","item","index","Key","style","marginLeft","color","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/S3Contents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction S3Contents() {\n  const [s3Contents, setS3Contents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchS3Contents();\n  }, []);\n\n  const fetchS3Contents = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/s3-contents');\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch S3 contents');\n      }\n\n      const data = await response.json();\n\n      // Sort by LastModified (most recent first)\n      const sortedData = data.sort((a, b) => new Date(b.LastModified) - new Date(a.LastModified));\n\n      setS3Contents(sortedData);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownload = (key) => {\n    const encodedKey = encodeURIComponent(key);\n    window.open(`http://localhost:3001/api/download-s3?key=${encodedKey}`, '_blank');\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>S3 Bucket Contents (Newest First)</h1>\n\n      {error && (\n        <div className=\"error-message\">\n          Error: {error}\n          <button onClick={fetchS3Contents} className=\"retry-button\">Retry</button>\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"loading\">Loading...</div>\n      ) : (\n        <div className=\"content-section\">\n          <ul>\n            {s3Contents.length === 0 ? (\n              <li>No files found in S3 bucket</li>\n            ) : (\n              s3Contents.map((item, index) => (\n                <li key={index}>\n                  {item.Key} &nbsp;\n                  <button onClick={() => handleDownload(item.Key)}>Download</button>\n                  <span style={{ marginLeft: '10px', color: '#888' }}>\n                    ({new Date(item.LastModified).toLocaleString()})\n                  </span>\n                </li>\n              ))\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default S3Contents;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdW,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;MAErE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACN,KAAK,IAAI,6BAA6B,CAAC;MACnE;MAEA,MAAMS,IAAI,GAAG,MAAMN,QAAQ,CAACI,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMG,UAAU,GAAGD,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,YAAY,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,YAAY,CAAC,CAAC;MAE3FlB,aAAa,CAACa,UAAU,CAAC;IAC3B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;IACzB,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmB,cAAc,GAAIC,GAAG,IAAK;IAC9B,MAAMC,UAAU,GAAGC,kBAAkB,CAACF,GAAG,CAAC;IAC1CG,MAAM,CAACC,IAAI,CAAC,6CAA6CH,UAAU,EAAE,EAAE,QAAQ,CAAC;EAClF,CAAC;EAED,oBACE3B,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhC,OAAA;MAAAgC,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzC7B,KAAK,iBACJP,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,SACtB,EAACzB,KAAK,eACbP,OAAA;QAAQqC,OAAO,EAAE5B,eAAgB;QAACsB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACN,EAEA/B,OAAO,gBACNL,OAAA;MAAK+B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEzCpC,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BhC,OAAA;QAAAgC,QAAA,EACG7B,UAAU,CAACmC,MAAM,KAAK,CAAC,gBACtBtC,OAAA;UAAAgC,QAAA,EAAI;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAEpCjC,UAAU,CAACoC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBzC,OAAA;UAAAgC,QAAA,GACGQ,IAAI,CAACE,GAAG,EAAC,OACV,eAAA1C,OAAA;YAAQqC,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACe,IAAI,CAACE,GAAG,CAAE;YAAAV,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClEpC,OAAA;YAAM2C,KAAK,EAAE;cAAEC,UAAU,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAAb,QAAA,GAAC,GACjD,EAAC,IAAIX,IAAI,CAACmB,IAAI,CAAClB,YAAY,CAAC,CAACwB,cAAc,CAAC,CAAC,EAAC,GACjD;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GALAK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACL;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClC,EAAA,CAxEQD,UAAU;AAAA8C,EAAA,GAAV9C,UAAU;AA0EnB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}