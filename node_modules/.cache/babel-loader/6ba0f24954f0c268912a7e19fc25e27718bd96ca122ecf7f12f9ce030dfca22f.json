{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AthenaQuery() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const runQuery = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      setResults([]);\n      setColumns([]);\n      const response = await fetch('http://localhost:3001/api/query-athena', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.Rows && data.Rows.length > 0) {\n        const headerRow = data.Rows[0].Data.map(cell => cell.VarCharValue !== undefined ? cell.VarCharValue : '');\n        const dataRows = data.Rows.slice(1).map(row => row.Data.map(cell => cell.VarCharValue !== undefined ? cell.VarCharValue : ''));\n        setColumns(headerRow);\n        setResults(dataRows);\n      } else {\n        setError(data.error || 'No results returned');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Athena Query Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Enter your Athena SQL query\",\n      rows: 5,\n      cols: 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runQuery,\n      disabled: loading,\n      children: loading ? 'Running...' : 'Run Query'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(AthenaQuery, \"XQ+27XNpqOa/OFnhnZiAl3IDLVg=\");\n_c = AthenaQuery;\nexport default AthenaQuery;\nvar _c;\n$RefreshReg$(_c, \"AthenaQuery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AthenaQuery","_s","query","setQuery","results","setResults","columns","setColumns","error","setError","loading","setLoading","runQuery","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Rows","length","headerRow","Data","map","cell","VarCharValue","undefined","dataRows","slice","row","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","cols","onClick","disabled","border","cellPadding","style","marginTop","col","idx","i","j","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AthenaQuery() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const runQuery = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      setResults([]);\n      setColumns([]);\n\n      const response = await fetch('http://localhost:3001/api/query-athena', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query })\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.Rows && data.Rows.length > 0) {\n        const headerRow = data.Rows[0].Data.map(cell =>\n          cell.VarCharValue !== undefined ? cell.VarCharValue : ''\n        );\n\n        const dataRows = data.Rows.slice(1).map(row =>\n          row.Data.map(cell => (cell.VarCharValue !== undefined ? cell.VarCharValue : ''))\n        );\n\n        setColumns(headerRow);\n        setResults(dataRows);\n      } else {\n        setError(data.error || 'No results returned');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Athena Query Interface</h1>\n      <textarea\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Enter your Athena SQL query\"\n        rows={5}\n        cols={80}\n      />\n      <br />\n      <button onClick={runQuery} disabled={loading}>\n        {loading ? 'Running...' : 'Run Query'}\n      </button>\n\n      {error && <p className=\"error-message\">Error: {error}</p>}\n\n      {results.length > 0 && (\n        <table border=\"1\" cellPadding=\"8\" style={{ marginTop: '20px' }}>\n          <thead>\n            <tr>\n              {columns.map((col, idx) => (\n                <th key={idx}>{col}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {results.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => (\n                  <td key={j}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AthenaQuery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}