{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predictions() {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [jobStatus, setJobStatus] = useState('');\n  const API_URL = 'http://localhost:3001'; // Ensure this matches your backend\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_URL}/api/latest-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const result = await response.json();\n      console.log('Predictions from backend:', result);\n      setPredictions(Array.isArray(result.data) ? result.data : []);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const triggerDatabricksJob = async () => {\n    try {\n      setJobStatus('Triggering Databricks job...');\n      const response = await fetch(`${API_URL}/api/run-databricks-job`, {\n        method: 'POST'\n      });\n      const result = await response.json();\n      if (result.success) {\n        setJobStatus(`✅ Job started with Run ID: ${result.run_id}`);\n      } else {\n        setJobStatus(`❌ Failed to trigger job`);\n      }\n    } catch (error) {\n      console.error('Trigger Error:', error);\n      setJobStatus(`❌ ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Databricks Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: triggerDatabricksJob,\n      style: {\n        marginBottom: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"\\u25B6\\uFE0F Run Prediction Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), jobStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: jobStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : predictions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No prediction data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"8\",\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(predictions[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key.toUpperCase()\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: predictions.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Predictions, \"RvNICO9fmM5Ar35mOvwSHqA8qGY=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Predictions","_s","predictions","setPredictions","loading","setLoading","error","setError","jobStatus","setJobStatus","API_URL","fetchPredictions","response","fetch","ok","Error","result","json","console","log","Array","isArray","data","message","triggerDatabricksJob","method","success","run_id","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","backgroundColor","color","border","borderRadius","cursor","length","cellPadding","borderCollapse","width","Object","keys","map","key","toUpperCase","row","index","values","value","i","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Predictions() {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [jobStatus, setJobStatus] = useState('');\n\n  const API_URL = 'http://localhost:3001'; // Ensure this matches your backend\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_URL}/api/latest-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const result = await response.json();\n      console.log('Predictions from backend:', result);\n      setPredictions(Array.isArray(result.data) ? result.data : []);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const triggerDatabricksJob = async () => {\n    try {\n      setJobStatus('Triggering Databricks job...');\n      const response = await fetch(`${API_URL}/api/run-databricks-job`, {\n        method: 'POST',\n      });\n      const result = await response.json();\n      if (result.success) {\n        setJobStatus(`✅ Job started with Run ID: ${result.run_id}`);\n      } else {\n        setJobStatus(`❌ Failed to trigger job`);\n      }\n    } catch (error) {\n      console.error('Trigger Error:', error);\n      setJobStatus(`❌ ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"page-container\" style={{ padding: '20px' }}>\n      <h1>Databricks Predictions</h1>\n\n      <button\n        onClick={triggerDatabricksJob}\n        style={{\n          marginBottom: '20px',\n          padding: '10px 20px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        }}\n      >\n        ▶️ Run Prediction Model\n      </button>\n\n      {jobStatus && <p style={{ marginBottom: '20px' }}>{jobStatus}</p>}\n\n      {error && <div className=\"error-message\" style={{ color: 'red' }}>Error: {error}</div>}\n      {loading ? (\n        <p>Loading...</p>\n      ) : predictions.length === 0 ? (\n        <p>No prediction data available</p>\n      ) : (\n        <div className=\"content-section\">\n          <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse', width: '100%' }}>\n            <thead>\n              <tr>\n                {Object.keys(predictions[0]).map((key) => (\n                  <th key={key}>{key.toUpperCase()}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {predictions.map((row, index) => (\n                <tr key={index}>\n                  {Object.values(row).map((value, i) => (\n                    <td key={i}>{value}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Predictions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}