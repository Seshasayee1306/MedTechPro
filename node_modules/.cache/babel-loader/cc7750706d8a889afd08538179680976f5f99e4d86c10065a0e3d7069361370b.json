{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Visualization.jsx\",\n  _s = $RefreshSig$();\n// src/components/Visualization.jsx\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Typography, Box, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualization = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchData = async () => {\n    try {\n      const res = await fetch('http://localhost:3001/api/latest-s3-log'); // ðŸ‘ˆ backend route\n      const json = await res.json();\n      if (json.data) {\n        setData(json.data.slice(-20)); // show latest 20 entries\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // refresh every 5 sec\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\uD83D\\uDCE1 Real-Time Device Status (S3)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 350,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"machine_runtime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"machine_runtime\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualization, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = Visualization;\nexport default Visualization;\nvar _c;\n$RefreshReg$(_c, \"Visualization\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Typography","Box","CircularProgress","jsxDEV","_jsxDEV","Visualization","_s","data","setData","loading","setLoading","fetchData","res","fetch","json","slice","err","console","error","interval","setInterval","clearInterval","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","height","stroke","dataKey","type","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Visualization.jsx"],"sourcesContent":["// src/components/Visualization.jsx\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Typography, Box, CircularProgress } from '@mui/material';\n\nconst Visualization = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch('http://localhost:3001/api/latest-s3-log'); // ðŸ‘ˆ backend route\n      const json = await res.json();\n      if (json.data) {\n        setData(json.data.slice(-20)); // show latest 20 entries\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // refresh every 5 sec\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>ðŸ“¡ Real-Time Device Status (S3)</Typography>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <ResponsiveContainer width=\"100%\" height={350}>\n          <LineChart data={data}>\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"timestamp\" />\n            <YAxis dataKey=\"machine_runtime\" />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"machine_runtime\" stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default Visualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}