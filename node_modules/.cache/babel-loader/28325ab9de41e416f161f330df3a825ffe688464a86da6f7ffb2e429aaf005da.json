{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AthenaQuery() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const runSearch = async () => {\n    if (!searchTerm.trim()) return;\n    try {\n      setLoading(true);\n      setError(null);\n      setResults([]);\n      setColumns([]);\n      const response = await fetch('http://localhost:3001/api/search-athena', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          keyword: searchTerm\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.Rows && data.Rows.length > 0) {\n        const headerRow = data.Rows[0].Data.map(cell => cell.VarCharValue !== undefined ? cell.VarCharValue : '');\n        const dataRows = data.Rows.slice(1).map(row => row.Data.map(cell => cell.VarCharValue !== undefined ? cell.VarCharValue : ''));\n        setColumns(headerRow);\n        setResults(dataRows);\n      } else {\n        setError(data.error || 'No results found.');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search MRI Logs (Athena)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by status, machine ID, error code...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        width: '400px',\n        padding: '8px',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runSearch,\n      disabled: loading,\n      children: loading ? 'Searching...' : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        marginTop: '20px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AthenaQuery, \"/pA+5m/XXjhD4M51248RnIi0B64=\");\n_c = AthenaQuery;\nexport default AthenaQuery;\nvar _c;\n$RefreshReg$(_c, \"AthenaQuery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AthenaQuery","_s","searchTerm","setSearchTerm","results","setResults","columns","setColumns","error","setError","loading","setLoading","runSearch","trim","response","fetch","method","headers","body","JSON","stringify","keyword","data","json","ok","Rows","length","headerRow","Data","map","cell","VarCharValue","undefined","dataRows","slice","row","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","width","padding","marginRight","onClick","disabled","color","border","cellPadding","marginTop","col","idx","i","j","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AthenaQuery() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const runSearch = async () => {\n    if (!searchTerm.trim()) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      setResults([]);\n      setColumns([]);\n\n      const response = await fetch('http://localhost:3001/api/search-athena', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ keyword: searchTerm })\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.Rows && data.Rows.length > 0) {\n        const headerRow = data.Rows[0].Data.map(cell =>\n          cell.VarCharValue !== undefined ? cell.VarCharValue : ''\n        );\n\n        const dataRows = data.Rows.slice(1).map(row =>\n          row.Data.map(cell => (cell.VarCharValue !== undefined ? cell.VarCharValue : ''))\n        );\n\n        setColumns(headerRow);\n        setResults(dataRows);\n      } else {\n        setError(data.error || 'No results found.');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Search MRI Logs (Athena)</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search by status, machine ID, error code...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        style={{ width: '400px', padding: '8px', marginRight: '10px' }}\n      />\n      <button onClick={runSearch} disabled={loading}>\n        {loading ? 'Searching...' : 'Search'}\n      </button>\n\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>Error: {error}</p>}\n\n      {results.length > 0 && (\n        <table border=\"1\" cellPadding=\"8\" style={{ marginTop: '20px', width: '100%' }}>\n          <thead>\n            <tr>\n              {columns.map((col, idx) => (\n                <th key={idx}>{col}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {results.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => (\n                  <td key={j}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AthenaQuery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}