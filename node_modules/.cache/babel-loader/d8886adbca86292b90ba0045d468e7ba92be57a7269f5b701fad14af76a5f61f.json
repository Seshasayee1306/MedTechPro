{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predictions() {\n  _s();\n  const [predictionOutput, setPredictionOutput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_URL = 'http://localhost:3001';\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/api/databricks-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const data = await response.json();\n      console.log('Databricks Output:', data.output);\n      setPredictionOutput(data.output || 'No output returned from Databricks job');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Databricks Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: predictionOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Predictions, \"lK3kDX+mLuLV0by/5H7yR4w7s9g=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Predictions","_s","predictionOutput","setPredictionOutput","loading","setLoading","error","setError","API_URL","fetchPredictions","response","fetch","ok","Error","data","json","console","log","output","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/Predictions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Predictions() {\n  const [predictionOutput, setPredictionOutput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_URL = 'http://localhost:3001';\n\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n\n  const fetchPredictions = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/api/databricks-predictions`);\n      if (!response.ok) throw new Error('Failed to fetch predictions');\n      const data = await response.json();\n      console.log('Databricks Output:', data.output);\n      setPredictionOutput(data.output || 'No output returned from Databricks job');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Databricks Predictions</h1>\n      {error && <div className=\"error-message\">Error: {error}</div>}\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"content-section\">\n          <pre>{predictionOutput}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Predictions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,OAAO,GAAG,uBAAuB;EAEvCX,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFJ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,6BAA6B,CAAC;MACrE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAACI,MAAM,CAAC;MAC9Cf,mBAAmB,CAACW,IAAI,CAACI,MAAM,IAAI,wCAAwC,CAAC;IAC9E,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAACD,KAAK,CAACa,OAAO,CAAC;IACzB,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BtB,OAAA;MAAAsB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BnB,KAAK,iBAAIP,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC5DrB,OAAO,gBACNL,OAAA;MAAAsB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB1B,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BtB,OAAA;QAAAsB,QAAA,EAAMnB;MAAgB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CAxCQD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}