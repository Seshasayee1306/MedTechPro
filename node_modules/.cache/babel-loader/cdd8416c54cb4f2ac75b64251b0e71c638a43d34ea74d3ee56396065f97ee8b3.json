{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/SendEmail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Button, Box, CircularProgress, Alert, TextField, Grid } from '@mui/material';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001';\nconst machines = [{\n  id: 1,\n  name: 'MRI Machine 1'\n}, {\n  id: 2,\n  name: 'MRI Machine 2'\n}, {\n  id: 3,\n  name: 'MRI Machine 3'\n}, {\n  id: 4,\n  name: 'MRI Machine 4'\n}];\nfunction SendEmail() {\n  _s();\n  const [timers, setTimers] = useState(Array(4).fill(0)); // minutes\n  const [counts, setCounts] = useState(Array(4).fill(0)); // seconds countdown\n  const [loadingIndex, setLoadingIndex] = useState(null);\n  const [statuses, setStatuses] = useState(Array(4).fill(''));\n\n  // Timer countdown effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounts(prevCounts => prevCounts.map((count, index) => {\n        if (count > 0) return count - 1;else return 0;\n      }));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // When a timer hits 0, send the email\n  useEffect(() => {\n    counts.forEach((count, index) => {\n      if (count === 0 && timers[index] > 0) {\n        sendEmail(index);\n        const updatedTimers = [...timers];\n        updatedTimers[index] = 0;\n        setTimers(updatedTimers);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counts]);\n  const handleSetTimer = (index, value) => {\n    const minutes = parseInt(value, 10) || 0;\n    const updatedTimers = [...timers];\n    updatedTimers[index] = minutes;\n    setTimers(updatedTimers);\n    const updatedCounts = [...counts];\n    updatedCounts[index] = minutes * 60; // convert to seconds\n    setCounts(updatedCounts);\n  };\n  const sendEmail = async index => {\n    setLoadingIndex(index);\n    try {\n      const response = await fetch(`${API_URL}/api/send-maintenance-email`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          toEmail: 'sb7762@srmist.edu.in',\n          machine: machines[index].name\n        })\n      });\n      const result = await response.json();\n      const newStatuses = [...statuses];\n      if (result.success) {\n        newStatuses[index] = `✅ Email sent for ${machines[index].name}!`;\n      } else {\n        newStatuses[index] = `❌ Failed to send for ${machines[index].name}`;\n      }\n      setStatuses(newStatuses);\n    } catch (err) {\n      console.error(err);\n      const newStatuses = [...statuses];\n      newStatuses[index] = `❌ Error occurred for ${machines[index].name}`;\n      setStatuses(newStatuses);\n    } finally {\n      setLoadingIndex(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      textAlign: 'center',\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"MRI Machine Maintenance Alert System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: \"Set a timer to notify the maintenance team for each MRI machine.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      sx: {\n        mt: 4\n      },\n      children: machines.map((machine, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            border: '1px solid #ccc',\n            borderRadius: 2,\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: machine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            label: \"Set Timer (minutes)\",\n            variant: \"outlined\",\n            size: \"small\",\n            sx: {\n              mt: 2\n            },\n            onChange: e => handleSetTimer(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 2\n            },\n            children: [\"Countdown: \", Math.floor(counts[index] / 60), \"m \", counts[index] % 60, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            sx: {\n              mt: 2\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 28\n            }, this),\n            onClick: () => sendEmail(index),\n            disabled: loadingIndex === index,\n            children: loadingIndex === index ? 'Sending...' : 'Send Email Now'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), loadingIndex === index && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              mt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 42\n          }, this), statuses[index] && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: statuses[index].startsWith('✅') ? 'success' : 'error',\n            sx: {\n              mt: 2\n            },\n            children: statuses[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, machine.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(SendEmail, \"OAM5EpNcYAIcfbAiQno4EX91+7s=\");\n_c = SendEmail;\nexport default SendEmail;\nvar _c;\n$RefreshReg$(_c, \"SendEmail\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Button","Box","CircularProgress","Alert","TextField","Grid","EmailIcon","jsxDEV","_jsxDEV","API_URL","machines","id","name","SendEmail","_s","timers","setTimers","Array","fill","counts","setCounts","loadingIndex","setLoadingIndex","statuses","setStatuses","interval","setInterval","prevCounts","map","count","index","clearInterval","forEach","sendEmail","updatedTimers","handleSetTimer","value","minutes","parseInt","updatedCounts","response","fetch","method","headers","body","JSON","stringify","toEmail","machine","result","json","newStatuses","success","err","console","error","maxWidth","sx","textAlign","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","border","borderRadius","p","type","label","size","onChange","e","target","Math","floor","color","startIcon","onClick","disabled","severity","startsWith","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/SendEmail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container, Typography, Button, Box,\n  CircularProgress, Alert, TextField, Grid\n} from '@mui/material';\nimport EmailIcon from '@mui/icons-material/Email';\n\nconst API_URL = 'http://localhost:3001';\n\nconst machines = [\n  { id: 1, name: 'MRI Machine 1' },\n  { id: 2, name: 'MRI Machine 2' },\n  { id: 3, name: 'MRI Machine 3' },\n  { id: 4, name: 'MRI Machine 4' }\n];\n\nfunction SendEmail() {\n  const [timers, setTimers] = useState(Array(4).fill(0)); // minutes\n  const [counts, setCounts] = useState(Array(4).fill(0)); // seconds countdown\n  const [loadingIndex, setLoadingIndex] = useState(null);\n  const [statuses, setStatuses] = useState(Array(4).fill(''));\n\n  // Timer countdown effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounts(prevCounts =>\n        prevCounts.map((count, index) => {\n          if (count > 0) return count - 1;\n          else return 0;\n        })\n      );\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // When a timer hits 0, send the email\n  useEffect(() => {\n    counts.forEach((count, index) => {\n      if (count === 0 && timers[index] > 0) {\n        sendEmail(index);\n        const updatedTimers = [...timers];\n        updatedTimers[index] = 0;\n        setTimers(updatedTimers);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counts]);\n\n  const handleSetTimer = (index, value) => {\n    const minutes = parseInt(value, 10) || 0;\n    const updatedTimers = [...timers];\n    updatedTimers[index] = minutes;\n    setTimers(updatedTimers);\n\n    const updatedCounts = [...counts];\n    updatedCounts[index] = minutes * 60; // convert to seconds\n    setCounts(updatedCounts);\n  };\n\n  const sendEmail = async (index) => {\n    setLoadingIndex(index);\n    try {\n      const response = await fetch(`${API_URL}/api/send-maintenance-email`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          toEmail: 'sb7762@srmist.edu.in',\n          machine: machines[index].name\n        })\n      });\n      const result = await response.json();\n      const newStatuses = [...statuses];\n      if (result.success) {\n        newStatuses[index] = `✅ Email sent for ${machines[index].name}!`;\n      } else {\n        newStatuses[index] = `❌ Failed to send for ${machines[index].name}`;\n      }\n      setStatuses(newStatuses);\n    } catch (err) {\n      console.error(err);\n      const newStatuses = [...statuses];\n      newStatuses[index] = `❌ Error occurred for ${machines[index].name}`;\n      setStatuses(newStatuses);\n    } finally {\n      setLoadingIndex(null);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ textAlign: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        MRI Machine Maintenance Alert System\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Set a timer to notify the maintenance team for each MRI machine.\n      </Typography>\n\n      <Grid container spacing={4} sx={{ mt: 4 }}>\n        {machines.map((machine, index) => (\n          <Grid item xs={12} md={6} key={machine.id}>\n            <Box sx={{ border: '1px solid #ccc', borderRadius: 2, p: 3 }}>\n              <Typography variant=\"h6\">{machine.name}</Typography>\n\n              <TextField\n                type=\"number\"\n                label=\"Set Timer (minutes)\"\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{ mt: 2 }}\n                onChange={(e) => handleSetTimer(index, e.target.value)}\n              />\n\n              <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                Countdown: {Math.floor(counts[index] / 60)}m {counts[index] % 60}s\n              </Typography>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ mt: 2 }}\n                startIcon={<EmailIcon />}\n                onClick={() => sendEmail(index)}\n                disabled={loadingIndex === index}\n              >\n                {loadingIndex === index ? 'Sending...' : 'Send Email Now'}\n              </Button>\n\n              {loadingIndex === index && <CircularProgress size={24} sx={{ mt: 2 }} />}\n\n              {statuses[index] && (\n                <Alert\n                  severity={statuses[index].startsWith('✅') ? 'success' : 'error'}\n                  sx={{ mt: 2 }}\n                >\n                  {statuses[index]}\n                </Alert>\n              )}\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default SendEmail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}