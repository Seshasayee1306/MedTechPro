{"ast":null,"code":"var _jsxFileName = \"/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AthenaSearch() {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [status, setStatus] = useState('');\n  const handleSearch = async () => {\n    if (!keyword.trim()) return;\n    setStatus('Searching...');\n    setColumns([]);\n    setRows([]);\n    try {\n      const response = await fetch('http://localhost:3001/api/search-athena', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          keyword\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        setStatus(result.error || 'Search failed.');\n        return;\n      }\n      if (result.Rows.length === 0) {\n        setStatus('No results found.');\n        return;\n      }\n      const headers = result.Rows[0].Data.map(col => col.VarCharValue || '');\n      const dataRows = result.Rows.slice(1).map(row => row.Data.map(col => col.VarCharValue || ''));\n      setColumns(headers);\n      setRows(dataRows);\n      setStatus(`${dataRows.length} result(s) found.`);\n    } catch (err) {\n      console.error(err);\n      setStatus('An error occurred.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search MRI Logs (Athena)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter error code, status, machine ID...\",\n      value: keyword,\n      onChange: e => setKeyword(e.target.value),\n      style: {\n        width: '300px',\n        padding: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), rows.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        marginTop: '20px',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col.toUpperCase()\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, rIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, cIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, cIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 42\n          }, this))\n        }, rIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AthenaSearch, \"PVGqgi2nHCjfztkMvdowXYsvIB0=\");\n_c = AthenaSearch;\nexport default AthenaSearch;\nvar _c;\n$RefreshReg$(_c, \"AthenaSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AthenaSearch","_s","keyword","setKeyword","columns","setColumns","rows","setRows","status","setStatus","handleSearch","trim","response","fetch","method","headers","body","JSON","stringify","result","json","ok","error","Rows","length","Data","map","col","VarCharValue","dataRows","slice","row","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","width","padding","onClick","marginLeft","border","cellPadding","marginTop","borderCollapse","i","toUpperCase","rIdx","cell","cIdx","_c","$RefreshReg$"],"sources":["/Users/seshasayeebalaji/Desktop/aws_proj/src/components/AthenaQuery.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AthenaSearch() {\n  const [keyword, setKeyword] = useState('');\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [status, setStatus] = useState('');\n\n  const handleSearch = async () => {\n    if (!keyword.trim()) return;\n\n    setStatus('Searching...');\n    setColumns([]);\n    setRows([]);\n\n    try {\n      const response = await fetch('http://localhost:3001/api/search-athena', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ keyword })\n      });\n\n      const result = await response.json();\n      if (!response.ok) {\n        setStatus(result.error || 'Search failed.');\n        return;\n      }\n\n      if (result.Rows.length === 0) {\n        setStatus('No results found.');\n        return;\n      }\n\n      const headers = result.Rows[0].Data.map(col => col.VarCharValue || '');\n      const dataRows = result.Rows.slice(1).map(row =>\n        row.Data.map(col => col.VarCharValue || '')\n      );\n\n      setColumns(headers);\n      setRows(dataRows);\n      setStatus(`${dataRows.length} result(s) found.`);\n    } catch (err) {\n      console.error(err);\n      setStatus('An error occurred.');\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Search MRI Logs (Athena)</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter error code, status, machine ID...\"\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n        style={{ width: '300px', padding: '8px' }}\n      />\n      <button onClick={handleSearch} style={{ marginLeft: '10px' }}>Search</button>\n      <p>{status}</p>\n\n      {rows.length > 0 && (\n        <table border=\"1\" cellPadding=\"8\" style={{ marginTop: '20px', borderCollapse: 'collapse' }}>\n          <thead>\n            <tr>\n              {columns.map((col, i) => <th key={i}>{col.toUpperCase()}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((row, rIdx) => (\n              <tr key={rIdx}>\n                {row.map((cell, cIdx) => <td key={cIdx}>{cell}</td>)}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AthenaSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}